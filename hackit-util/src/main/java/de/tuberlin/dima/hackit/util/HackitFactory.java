/*
 * Copyright 2022 DIMA/TU-Berlin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package de.tuberlin.dima.hackit.util;

/**
 * HackitFactory is a factory for the class
 * @param <T>
 */
public abstract class HackitFactory<T> {

  /**
   * tClass is the type of object created by the factory
   */
  private final Class<T> tClass;

  /**
   * Default Constructor
   *
   * @param tClass type of object to generate by the factory
   */
  public HackitFactory(Class<T> tClass) {
    this.tClass = tClass;
  }

  /**
   * obtain the {@link Class} generated by the factory
   *
   * @return {@link Class} instance
   */
  public Class<T> getTClass() {
    return this.tClass;
  }

  /**
   * build is called to generate a new instance of <code>tClass</code>
   *
   * @return Instance of <code>tClass</code>
   */
  public abstract T build();
}
